@page "/Notas2"
@rendermode InteractiveServer
@using NotrAppProject.Components.Data
@inject NotrAppProject.Components.Services.INoteService noteService
@inject MudBlazor.ISnackbar Snackbar

<MudSnackbarProvider/>
<PageTitle>Notas</PageTitle>

<h1>Notas</h1>

<MudDivider />
<MudCard Elevation="25">
    <MudCardHeader Class="mb-0 pb-0">
        <MudText Typo="Typo.h6">Añadir o Editar nota</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField @bind-Value="editId" Label="Id para edición"></MudTextField>
        <MudTextField @bind-Value="note1.Title" Label="Titulo"></MudTextField>
        <MudTextField @bind-Value="note1.Description" Label="Descripción"></MudTextField>
        <MudRadioGroup @bind-Value="note1.State">
            <MudRadio Value="1" Color="Color.Info">Pendiente</MudRadio>
            <MudRadio Value="2" Color="Color.Primary">En progreso</MudRadio>
            <MudRadio Value="3" Color="Color.Success">Completado</MudRadio>
        </MudRadioGroup>
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="Save">Guardar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="Edit">Editar</MudButton>
    </MudCardContent> 
</MudCard>
<MudDivider/>
<MudCard Elevation="25">
    <MudCardHeader Class="mb-0 pb-0">
        <MudText Typo="Typo.h6">Eliminar nota</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField @bind-Value="deleteId" Label="Id de la nota"></MudTextField>
        <br />
        <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="Delete">Eliminar</MudButton>
    </MudCardContent>
</MudCard>
<MudDivider />
<MudDataGrid Items="notas">
    <Columns>
        <PropertyColumn Title="Id" DataLabel="Id" Property="x=>x.Id"></PropertyColumn>
        <PropertyColumn Title="Título" Property="x=>x.Title"></PropertyColumn>
        <PropertyColumn Title="Descripción" Property="x=>x.Description"></PropertyColumn>
        <PropertyColumn Title="Estado" Property="x=>x.State"></PropertyColumn>
    </Columns>
</MudDataGrid>

@code{

    private Note note1 = new Note();
    private Note note2 = new Note();
    private int deleteId = 0;
    private int editId = 0;
    private List<Note> notas = new List<Note>();

    protected override async Task OnInitializedAsync()
    {
        GetNotas();
    }

    private List<Note> GetNotas()
    {
        notas = noteService.GetNotes();
        return notas;
    }

    private void Save(){

        noteService.SaveNote(note1);
        note1 = new Note();
        GetNotas();
        Snackbar.Add("Nota guardada!", Severity.Success);
    }

    private void Edit()
    {
        if(editId != 0)
        {
            note2 = notas.FirstOrDefault(d => d.Id == editId);
            note2.Title = note1.Title;
            note2.Description = note1.Description;
            note2.State = note1.State;
            noteService.UpdateNote(note2);
            note1 = new Note();
            GetNotas();
            Snackbar.Add("Nota editada", Severity.Info);
        }
    }

    private void Delete(){

        if (deleteId != 0)
        {
            noteService.DeleteNote(deleteId);
            GetNotas();
            Snackbar.Add("Nota elimnada", Severity.Error);
        }
    }
}